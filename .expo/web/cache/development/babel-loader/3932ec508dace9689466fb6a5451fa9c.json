{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\anonibus_navigation\\\\Chat\\\\index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Ionicons } from '@expo/vector-icons';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport firebase from \"../config/firebase\";\nimport api from \"../services/axios\";\nimport axios from 'axios';\nexport default function Chat() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      count = _useState4[0],\n      setCount = _useState4[1];\n\n  var onPress = function onPress() {\n    return setCount(function (prevCount) {\n      return prevCount + 1;\n    });\n  };\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      mensagens = _useState6[0],\n      setMensagens = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      caixaTexto = _useState8[0],\n      setCaixaTexto = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      scrollview = _useState10[0],\n      setScrollview = _useState10[1];\n\n  var db = firebase.firestore();\n\n  var salvar = function salvar() {\n    api.post('/enviarMensagem', {\n      mensagem: caixaTexto,\n      usuario: user.name,\n      avatar: user.picture\n    }).then(function () {\n      setCaixaTexto('');\n      scrollview.scrollToEnd({\n        animated: true\n      });\n    }).catch(function () {});\n  };\n\n  useEffect(function () {\n    carregaUsuarioAnonimo();\n    var mensagens_enviadas = [];\n    var unsubscribe = db.collection(\"chats\").doc(\"sala_01\").collection('mensagens').onSnapshot({\n      includeMetadataChanges: false\n    }, function (snapshot) {\n      snapshot.docChanges().forEach(function (change) {\n        if (change.type === \"added\") {\n          var _change$doc$data = change.doc.data(),\n              mensagem = _change$doc$data.mensagem,\n              usuario = _change$doc$data.usuario,\n              avatar = _change$doc$data.avatar;\n\n          var id = change.doc.id;\n          mensagens_enviadas.push({\n            mensagem: mensagem,\n            usuario: usuario,\n            avatar: avatar,\n            id: id\n          });\n        }\n      });\n      setMensagens([].concat(mensagens_enviadas));\n      scrollview ? scrollview.scrollToEnd({\n        animated: true\n      }) : null;\n    });\n    return function () {\n      unsubscribe();\n    };\n  }, []);\n\n  var carregaUsuarioAnonimo = function carregaUsuarioAnonimo() {\n    axios.get('https://randomuser.me/api/').then(function (response) {\n      var user = response.data.results[0];\n      setUser({\n        name: user.name.first + \" \" + user.name.last,\n        picture: user.picture.large\n      });\n      console.log('user', user);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.view,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, user && React.createElement(React.Fragment, null, React.createElement(TouchableOpacity, {\n    onPress: carregaUsuarioAnonimo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, React.createElement(Image, {\n    style: styles.avatar,\n    source: {\n      uri: user.picture\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  })), React.createElement(Text, {\n    style: styles.nome_usuario,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, user.name)), React.createElement(ScrollView, {\n    style: styles.scrollview,\n    ref: function ref(view) {\n      setScrollview(view);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, mensagens.length > 0 && mensagens.map(function (item) {\n    return React.createElement(View, {\n      key: item.id,\n      style: styles.linha_conversa,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, React.createElement(Image, {\n      style: styles.avatar_conversa,\n      source: {\n        uri: item.avatar\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }\n    }), React.createElement(View, {\n      style: {\n        flexDirection: 'column',\n        marginTop: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 12,\n        color: '#999'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, item.usuario), React.createElement(TouchableOpacity, {\n      style: styles.button,\n      onPress: onPress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, typeof item.mensagem == \"string\" ? React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 19\n      }\n    }, item.mensagem) : React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 19\n      }\n    }, \" \"))), React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 15\n      }\n    }, \" Like: \", count));\n  })), React.createElement(View, {\n    style: styles.footer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input_mensagem,\n    onChangeText: function onChangeText(text) {\n      return setCaixaTexto(text);\n    },\n    value: caixaTexto,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: salvar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, React.createElement(Ionicons, {\n    style: {\n      margin: 3\n    },\n    name: \"md-send\",\n    size: 32,\n    color: '#999',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }))));\n}\nvar styles = StyleSheet.create({\n  view: {\n    flex: 1,\n    alignItems: 'center',\n    alignContent: 'flex-start',\n    width: '100%',\n    paddingTop: 50,\n    borderBottomWidth: 1,\n    borderColor: '#fff'\n  },\n  avatar: {\n    width: 80,\n    height: 80,\n    borderRadius: 50,\n    borderWidth: 3,\n    borderColor: '#333'\n  },\n  avatar_conversa: {\n    width: 40,\n    height: 40,\n    borderRadius: 50,\n    borderWidth: 1,\n    borderColor: '#333',\n    marginRight: 10\n  },\n  nome_usuario: {\n    fontSize: 20,\n    color: '#999'\n  },\n  footer: {\n    flexDirection: 'row',\n    backgroundColor: '#fff',\n    height: 50\n  },\n  input_mensagem: {\n    borderColor: '#e6e6e6',\n    borderWidth: 1,\n    flex: 1,\n    borderRadius: 4,\n    margin: 10,\n    marginTop: 4,\n    padding: 2\n  },\n  scrollView: {\n    backgroundColor: '#fff',\n    width: '100%',\n    borderTopColor: '#e6e6e6',\n    borderTopWidth: 1\n  },\n  linha_conversa: {\n    flexDirection: 'row',\n    paddingLeft: 10,\n    paddingTop: 10,\n    marginRight: 200\n  }\n});","map":{"version":3,"sources":["C:/anonibus_navigation/Chat/index.js"],"names":["React","useState","useEffect","Ionicons","firebase","api","axios","Chat","user","setUser","count","setCount","onPress","prevCount","mensagens","setMensagens","caixaTexto","setCaixaTexto","scrollview","setScrollview","db","firestore","salvar","post","mensagem","usuario","name","avatar","picture","then","scrollToEnd","animated","catch","carregaUsuarioAnonimo","mensagens_enviadas","unsubscribe","collection","doc","onSnapshot","includeMetadataChanges","snapshot","docChanges","forEach","change","type","data","id","push","get","response","results","first","last","large","console","log","error","styles","view","uri","nome_usuario","length","map","item","linha_conversa","avatar_conversa","flexDirection","marginTop","fontSize","color","button","footer","input_mensagem","text","margin","StyleSheet","create","flex","alignItems","alignContent","width","paddingTop","borderBottomWidth","borderColor","height","borderRadius","borderWidth","marginRight","backgroundColor","padding","scrollView","borderTopColor","borderTopWidth","paddingLeft"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,oBAAzB;;;;;;;;AAKA,OAAOC,QAAP;AACA,OAAOC,GAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAIA,eAAe,SAASC,IAAT,GAAgB;AAAA,kBAELN,QAAQ,CAAC,IAAD,CAFH;AAAA;AAAA,MAEtBO,IAFsB;AAAA,MAEhBC,OAFgB;;AAAA,mBAGHR,QAAQ,CAAC,CAAD,CAHL;AAAA;AAAA,MAGtBS,KAHsB;AAAA,MAGfC,QAHe;;AAI7B,MAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA,WAAMD,QAAQ,CAAC,UAAAE,SAAS;AAAA,aAAIA,SAAS,GAAG,CAAhB;AAAA,KAAV,CAAd;AAAA,GAAhB;;AAJ6B,mBAMKZ,QAAQ,CAAC,EAAD,CANb;AAAA;AAAA,MAMtBa,SANsB;AAAA,MAMXC,YANW;;AAAA,mBAOOd,QAAQ,CAAC,EAAD,CAPf;AAAA;AAAA,MAOtBe,UAPsB;AAAA,MAOVC,aAPU;;AAAA,mBAQOhB,QAAQ,CAAC,EAAD,CARf;AAAA;AAAA,MAQtBiB,UARsB;AAAA,MAQVC,aARU;;AAY7B,MAAMC,EAAE,GAAGhB,QAAQ,CAACiB,SAAT,EAAX;;AAEA,MAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACnBjB,IAAAA,GAAG,CAACkB,IAAJ,CAAS,iBAAT,EAA4B;AAC1BC,MAAAA,QAAQ,EAAER,UADgB;AAE1BS,MAAAA,OAAO,EAAEjB,IAAI,CAACkB,IAFY;AAG1BC,MAAAA,MAAM,EAAEnB,IAAI,CAACoB;AAHa,KAA5B,EAKGC,IALH,CAKQ,YAAY;AAEhBZ,MAAAA,aAAa,CAAC,EAAD,CAAb;AACAC,MAAAA,UAAU,CAACY,WAAX,CAAuB;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAvB;AACD,KATH,EASKC,KATL,CASW,YAAY,CAEpB,CAXH;AAYD,GAbD;;AAeA9B,EAAAA,SAAS,CAAC,YAAM;AACd+B,IAAAA,qBAAqB;AACrB,QAAIC,kBAAkB,GAAG,EAAzB;AACA,QAAMC,WAAW,GAAGf,EAAE,CAACgB,UAAH,CAAc,OAAd,EACjBC,GADiB,CACb,SADa,EACFD,UADE,CACS,WADT,EAEjBE,UAFiB,CAEN;AAAEC,MAAAA,sBAAsB,EAAE;AAA1B,KAFM,EAE6B,UAAUC,QAAV,EAAoB;AACjEA,MAAAA,QAAQ,CAACC,UAAT,GAAsBC,OAAtB,CAA8B,UAAUC,MAAV,EAAkB;AAC9C,YAAIA,MAAM,CAACC,IAAP,KAAgB,OAApB,EAA6B;AAAA,iCACWD,MAAM,CAACN,GAAP,CAAWQ,IAAX,EADX;AAAA,cACnBrB,QADmB,oBACnBA,QADmB;AAAA,cACTC,OADS,oBACTA,OADS;AAAA,cACAE,MADA,oBACAA,MADA;;AAE3B,cAAMmB,EAAE,GAAGH,MAAM,CAACN,GAAP,CAAWS,EAAtB;AACAZ,UAAAA,kBAAkB,CAACa,IAAnB,CAAwB;AAAEvB,YAAAA,QAAQ,EAARA,QAAF;AAAYC,YAAAA,OAAO,EAAPA,OAAZ;AAAqBE,YAAAA,MAAM,EAANA,MAArB;AAA6BmB,YAAAA,EAAE,EAAFA;AAA7B,WAAxB;AACD;AACF,OAND;AAOA/B,MAAAA,YAAY,WAAKmB,kBAAL,EAAZ;AACAhB,MAAAA,UAAU,GAAGA,UAAU,CAACY,WAAX,CAAuB;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAvB,CAAH,GAAgD,IAA1D;AACD,KAZiB,CAApB;AAaA,WAAO,YAAM;AACXI,MAAAA,WAAW;AACZ,KAFD;AAGD,GAnBQ,EAmBN,EAnBM,CAAT;;AAqBA,MAAMF,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAM;AAClC3B,IAAAA,KAAK,CAAC0C,GAAN,CAAU,4BAAV,EACGnB,IADH,CACQ,UAAUoB,QAAV,EAAoB;AACxB,UAAMzC,IAAI,GAAGyC,QAAQ,CAACJ,IAAT,CAAcK,OAAd,CAAsB,CAAtB,CAAb;AAEAzC,MAAAA,OAAO,CAAC;AACNiB,QAAAA,IAAI,EAAKlB,IAAI,CAACkB,IAAL,CAAUyB,KAAf,SAAwB3C,IAAI,CAACkB,IAAL,CAAU0B,IADhC;AAENxB,QAAAA,OAAO,EAAEpB,IAAI,CAACoB,OAAL,CAAayB;AAFhB,OAAD,CAAP;AAIAC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoB/C,IAApB;AACD,KATH,EAUGwB,KAVH,CAUS,UAAUwB,KAAV,EAAiB;AACtBF,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACD,KAZH;AAaD,GAdD;;AAmBA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGlD,IAAI,IACH,0CACE,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEyB,qBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAEwB,MAAM,CAAC9B,MADhB;AAEE,IAAA,MAAM,EAAE;AAAEgC,MAAAA,GAAG,EAAEnD,IAAI,CAACoB;AAAZ,KAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAQE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE6B,MAAM,CAACG,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCpD,IAAI,CAACkB,IAAxC,CARF,CAHJ,EAkBE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAE+B,MAAM,CAACvC,UAA1B;AAAsC,IAAA,GAAG,EAAE,aAACwC,IAAD,EAAU;AAAEvC,MAAAA,aAAa,CAACuC,IAAD,CAAb;AAAqB,KAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI5C,SAAS,CAAC+C,MAAV,GAAmB,CAAnB,IAAwB/C,SAAS,CAACgD,GAAV,CAAc,UAAAC,IAAI;AAAA,WAExC,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,IAAI,CAACjB,EAAhB;AAAoB,MAAA,KAAK,EAAEW,MAAM,CAACO,cAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAEP,MAAM,CAACQ,eAArB;AAAsC,MAAA,MAAM,EAAE;AAAEN,QAAAA,GAAG,EAAEI,IAAI,CAACpC;AAAZ,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEuC,QAAAA,aAAa,EAAE,QAAjB;AAA2BC,QAAAA,SAAS,EAAE;AAAtC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE,EAAZ;AAAgBC,QAAAA,KAAK,EAAE;AAAvB,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+CN,IAAI,CAACtC,OAApD,CADF,EAEE,oBAAC,gBAAD;AAAkB,MAAA,KAAK,EAAEgC,MAAM,CAACa,MAAhC;AAAwC,MAAA,OAAO,EAAE1D,OAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,OAAQmD,IAAI,CAACvC,QAAb,IAA0B,QAA1B,GACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOuC,IAAI,CAACvC,QAAZ,CADD,GAGC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJF,CAFF,CAFF,EAYE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAcd,KAAd,CAZF,CAFwC;AAAA,GAAlB,CAF5B,CAlBF,EA0CE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE+C,MAAM,CAACc,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEd,MAAM,CAACe,cADhB;AAEE,IAAA,YAAY,EAAE,sBAAAC,IAAI;AAAA,aAAIxD,aAAa,CAACwD,IAAD,CAAjB;AAAA,KAFpB;AAGE,IAAA,KAAK,EAAEzD,UAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEM,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE;AAAEoD,MAAAA,MAAM,EAAE;AAAV,KAAjB;AAAgC,IAAA,IAAI,EAAC,SAArC;AAA+C,IAAA,IAAI,EAAE,EAArD;AAAyD,IAAA,KAAK,EAAE,MAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANF,CA1CF,CADF;AA2DD;AAID,IAAMjB,MAAM,GAAGkB,UAAU,CAACC,MAAX,CAAkB;AAC/BlB,EAAAA,IAAI,EAAE;AACJmB,IAAAA,IAAI,EAAE,CADF;AAEJC,IAAAA,UAAU,EAAE,QAFR;AAGJC,IAAAA,YAAY,EAAE,YAHV;AAIJC,IAAAA,KAAK,EAAE,MAJH;AAKJC,IAAAA,UAAU,EAAE,EALR;AAMJC,IAAAA,iBAAiB,EAAE,CANf;AAOJC,IAAAA,WAAW,EAAE;AAPT,GADyB;AAU/BxD,EAAAA,MAAM,EAAE;AACNqD,IAAAA,KAAK,EAAE,EADD;AAENI,IAAAA,MAAM,EAAE,EAFF;AAGNC,IAAAA,YAAY,EAAE,EAHR;AAINC,IAAAA,WAAW,EAAE,CAJP;AAKNH,IAAAA,WAAW,EAAE;AALP,GAVuB;AAkB/BlB,EAAAA,eAAe,EAAE;AACfe,IAAAA,KAAK,EAAE,EADQ;AAEfI,IAAAA,MAAM,EAAE,EAFO;AAGfC,IAAAA,YAAY,EAAE,EAHC;AAIfC,IAAAA,WAAW,EAAE,CAJE;AAKfH,IAAAA,WAAW,EAAE,MALE;AAMfI,IAAAA,WAAW,EAAE;AANE,GAlBc;AA2B/B3B,EAAAA,YAAY,EAAE;AACZQ,IAAAA,QAAQ,EAAE,EADE;AAEZC,IAAAA,KAAK,EAAE;AAFK,GA3BiB;AAgC/BE,EAAAA,MAAM,EAAE;AACNL,IAAAA,aAAa,EAAE,KADT;AAENsB,IAAAA,eAAe,EAAE,MAFX;AAGNJ,IAAAA,MAAM,EAAE;AAHF,GAhCuB;AAqC/BZ,EAAAA,cAAc,EAAE;AACdW,IAAAA,WAAW,EAAE,SADC;AAEdG,IAAAA,WAAW,EAAE,CAFC;AAGdT,IAAAA,IAAI,EAAE,CAHQ;AAIdQ,IAAAA,YAAY,EAAE,CAJA;AAKdX,IAAAA,MAAM,EAAE,EALM;AAMdP,IAAAA,SAAS,EAAE,CANG;AAOdsB,IAAAA,OAAO,EAAE;AAPK,GArCe;AA8C/BC,EAAAA,UAAU,EAAE;AACVF,IAAAA,eAAe,EAAE,MADP;AAEVR,IAAAA,KAAK,EAAE,MAFG;AAGVW,IAAAA,cAAc,EAAE,SAHN;AAIVC,IAAAA,cAAc,EAAE;AAJN,GA9CmB;AAoD/B5B,EAAAA,cAAc,EAAE;AACdE,IAAAA,aAAa,EAAE,KADD;AAEd2B,IAAAA,WAAW,EAAE,EAFC;AAGdZ,IAAAA,UAAU,EAAE,EAHE;AAIdM,IAAAA,WAAW,EAAE;AAJC;AApDe,CAAlB,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Ionicons } from '@expo/vector-icons';\nimport {\n  StyleSheet, View, Text, Image, ScrollView,\n  TextInput, TouchableOpacity\n} from 'react-native';\nimport firebase from '../config/firebase';\nimport api from '../services/axios';\nimport axios from 'axios';\n\n\n\nexport default function Chat() {\n\n  const [user, setUser] = useState(null)\n  const [count, setCount] = useState(0);\n  const onPress = () => setCount(prevCount => prevCount + 1);\n  \n  const [mensagens, setMensagens] = useState([])\n  const [caixaTexto, setCaixaTexto] = useState('')\n  const [scrollview, setScrollview] = useState('')\n\n\n\n  const db = firebase.firestore()\n\n  const salvar = () => {\n    api.post('/enviarMensagem', {\n      mensagem: caixaTexto,\n      usuario: user.name,\n      avatar: user.picture,\n    })\n      .then(function () {\n        // setMensagens([...mensagens, caixaTexto])\n        setCaixaTexto('')\n        scrollview.scrollToEnd({ animated: true })\n      }).catch(function () {\n\n      })\n  }\n\n  useEffect(() => {\n    carregaUsuarioAnonimo()\n    let mensagens_enviadas = []\n    const unsubscribe = db.collection(\"chats\")\n      .doc(\"sala_01\").collection('mensagens')\n      .onSnapshot({ includeMetadataChanges: false }, function (snapshot) {\n        snapshot.docChanges().forEach(function (change) {\n          if (change.type === \"added\") {\n            const { mensagem, usuario, avatar } = change.doc.data()\n            const id = change.doc.id\n            mensagens_enviadas.push({ mensagem, usuario, avatar, id })\n          } \n        })\n        setMensagens([...mensagens_enviadas])\n        scrollview ? scrollview.scrollToEnd({ animated: true }) : null;\n      })\n    return () => {\n      unsubscribe()\n    }\n  }, [])\n\n  const carregaUsuarioAnonimo = () => {\n    axios.get('https://randomuser.me/api/')\n      .then(function (response) {\n        const user = response.data.results[0];\n        // setDistance(response.data.distance)\n        setUser({\n          name: `${user.name.first} ${user.name.last}`,\n          picture: user.picture.large\n        })\n        console.log('user', user)\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n\n  \n\n  return (\n    <View style={styles.view}>\n\n      {user &&\n        <>\n          <TouchableOpacity onPress={carregaUsuarioAnonimo}>\n\n            <Image\n              style={styles.avatar}\n              source={{ uri: user.picture }} />\n          </TouchableOpacity>\n\n          <Text style={styles.nome_usuario}>{user.name}</Text>\n        </>\n\n      }\n\n\n\n      <ScrollView style={styles.scrollview} ref={(view) => { setScrollview(view) }}>\n        {\n          mensagens.length > 0 && mensagens.map(item => (\n\n            <View key={item.id} style={styles.linha_conversa}>\n              <Image style={styles.avatar_conversa} source={{ uri: item.avatar }} />\n              <View style={{ flexDirection: 'column', marginTop: 5 }}>\n                <Text style={{ fontSize: 12, color: '#999' }}>{item.usuario}</Text>\n                <TouchableOpacity style={styles.button} onPress={onPress}>\n                {typeof (item.mensagem) == \"string\" ?\n                  <Text>{item.mensagem}</Text>\n                  :\n                  <Text> </Text>\n                }\n                </TouchableOpacity>\n              </View>\n              <Text> Like: {count}</Text>\n            </View>\n\n          ))\n        }\n      </ScrollView>\n\n\n      <View style={styles.footer}>\n        <TextInput\n          style={styles.input_mensagem}\n          onChangeText={text => setCaixaTexto(text)}\n          value={caixaTexto} />\n\n        <TouchableOpacity onPress={salvar}>\n          <Ionicons style={{ margin: 3 }} name=\"md-send\" size={32} color={'#999'} />\n        </TouchableOpacity>\n      </View>\n\n\n\n    </View>)\n\n    \n}\n\n\n\nconst styles = StyleSheet.create({\n  view: {\n    flex: 1,\n    alignItems: 'center',\n    alignContent: 'flex-start',\n    width: '100%',\n    paddingTop: 50,\n    borderBottomWidth: 1,\n    borderColor: '#fff'\n  },\n  avatar: {\n    width: 80,\n    height: 80,\n    borderRadius: 50,\n    borderWidth: 3,\n    borderColor: '#333'\n  },\n\n  avatar_conversa: {\n    width: 40,\n    height: 40,\n    borderRadius: 50,\n    borderWidth: 1,\n    borderColor: '#333',\n    marginRight: 10\n  },\n\n  nome_usuario: {\n    fontSize: 20,\n    color: '#999'\n  },\n\n  footer: {\n    flexDirection: 'row',\n    backgroundColor: '#fff',\n    height: 50\n  },\n  input_mensagem: {\n    borderColor: '#e6e6e6',\n    borderWidth: 1,\n    flex: 1,\n    borderRadius: 4,\n    margin: 10,\n    marginTop: 4,\n    padding: 2\n  },\n  scrollView: {\n    backgroundColor: '#fff',\n    width: '100%',\n    borderTopColor: '#e6e6e6',\n    borderTopWidth: 1,\n  },\n  linha_conversa: {\n    flexDirection: 'row',\n    paddingLeft: 10,\n    paddingTop: 10,\n    marginRight: 200,\n  }\n})\n"]},"metadata":{},"sourceType":"module"}