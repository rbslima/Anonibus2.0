{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\anonibus_navigation\\\\Upload\\\\index.js\";\nimport React, { useState, useEffect } from 'react';\nimport * as ImagePicker from 'expo-image-picker';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport firebase from \"../config/firebase\";\nimport { WrapperView, CorrecaoView, Header, Content, Footer, Avatar } from \"./styles\";\nexport default function Upload() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      imagem = _useState2[0],\n      setImagem = _useState2[1];\n\n  uploadImagem = function uploadImagem(uri) {\n    var response, blob, filename, ref;\n    return _regeneratorRuntime.async(function uploadImagem$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch(uri));\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(response.blob());\n\n          case 5:\n            blob = _context.sent;\n            filename = new Date().getTime();\n            ref = firebase.storage().ref().child('upload/' + filename);\n            ref.put(blob).then(function (snapshot) {\n              snapshot.ref.getDownloadURL().then(function (downloadURL) {\n                setImagem(downloadURL);\n              });\n            });\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  escolherImagem = function escolherImagem() {\n    var result;\n    return _regeneratorRuntime.async(function escolherImagem$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 3:\n            result = _context2.sent;\n\n            if (!result.cancelled) {\n              uploadImagem(result.uri);\n            }\n\n            console.log(result);\n            _context2.next = 11;\n            break;\n\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  return React.createElement(CorrecaoView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, React.createElement(WrapperView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, \"Sou texto Um\")), React.createElement(Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, imagem && React.createElement(Avatar, {\n    source: {\n      uri: imagem\n    },\n    style: {\n      width: 200,\n      height: 200\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    title: \"Escolher Imagem\",\n    onPress: function onPress() {\n      escolherImagem();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  })), React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, \"Sou texto Tres\"))));\n}","map":{"version":3,"sources":["C:/anonibus_navigation/Upload/index.js"],"names":["React","useState","useEffect","ImagePicker","firebase","WrapperView","CorrecaoView","Header","Content","Footer","Avatar","Upload","imagem","setImagem","uploadImagem","uri","fetch","response","blob","filename","Date","getTime","ref","storage","child","put","then","snapshot","getDownloadURL","downloadURL","escolherImagem","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","cancelled","console","log","width","height"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\n//expo install expo-image-picker\nimport * as ImagePicker from 'expo-image-picker';\n\nimport {\n  Text, Button, Image\n} from 'react-native';\n\nimport firebase from '../config/firebase';\n\nimport { WrapperView, CorrecaoView, Header, Content, Footer, Avatar } from './styles';\n\n\nexport default function Upload() {\n\n  const [imagem, setImagem] = useState(null);\n\n  uploadImagem = async (uri) => {\n    const response = await fetch(uri);\n    const blob = await response.blob();\n    const filename = new Date().getTime();\n\n    var ref = firebase.storage().ref().child('upload/' + filename);\n\n    ref.put(blob).then(function (snapshot) {\n\n      snapshot.ref.getDownloadURL().then(function (downloadURL) {\n        setImagem(downloadURL)\n      })\n\n    })\n  }\n\n  escolherImagem = async () => {\n    try {\n      let result = await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.All,\n        allowsEditing: true,\n        aspect: [4, 3],\n        quality: 1,\n      });\n      if (!result.cancelled) {\n        // setImagem(result.uri)\n        uploadImagem(result.uri);\n\n      }\n\n      console.log(result);\n    } catch (E) {\n      console.log(E);\n    }\n  };\n\n\n  return (\n    <CorrecaoView>\n      <WrapperView>\n        <Header>\n          <Text>Sou texto Um</Text>\n        </Header>\n        <Content>\n\n          {imagem &&\n            <Avatar source={{ uri: imagem }} style={{ width: 200, height: 200 }} />\n          }\n\n\n          <Button title=\"Escolher Imagem\" onPress={() => { escolherImagem() }} />\n        </Content>\n        <Footer>\n          <Text>Sou texto Tres</Text>\n        </Footer>\n      </WrapperView>\n    </CorrecaoView>\n  )\n\n}\n"]},"metadata":{},"sourceType":"module"}